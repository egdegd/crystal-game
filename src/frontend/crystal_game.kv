#: import Button kivy.uix.button.Button
#: import buttons_width_coef src.backend.constants.BUTTONS_WIDTH_COEF
#: import image_ratios src.backend.constants.IMAGE_RATIOS
#: import screen_utils src.backend.ScreenUtils.ScreenUtils

<MenuScreen>:
    BoxLayout:
        size_hint: 0.5, 0.6
        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
        orientation: 'vertical'
        padding: '10dp'
        spacing: self.height / 40
        Button:
            text: 'Levels'
            on_press: root.manager.transition.direction = 'left';root.manager.current = 'levels'
            background_normal: app.language_utils.set_texture('button')
            background_down: app.language_utils.set_texture('button_red_pressed')
        Button:
            text: 'Tutorial'
            on_press: root.manager.transition.direction = 'left';root.manager.current = 'tutorial'
            background_normal: app.language_utils.set_texture('button')
            background_down: app.language_utils.set_texture('button_red_pressed')
        Button:
            text: 'Quit'
            on_press: app.stop()
            background_normal: app.language_utils.set_texture('button')
            background_down: app.language_utils.set_texture('button_red_pressed')

    BoxLayout:
        size_hint: 0.15, 0.1
        pos_hint:  {'right': 1, 'bot': 0}
        orientation: 'horizontal'
        padding: 0, 0, '7dp', '7dp'
        spacing: '10dp'
        Button:
            id: en_flag
            border: 0, 0, 0, 0
            size_hint_y: None
            height: self.width / image_ratios['en_flag']
            on_press: app.language_utils.change_language('en')
            background_normal: 'resources/images/en_flag.jpg'
        Button:
            id: ru_flag
            border: 0, 0, 0, 0
            size_hint_y: None
            height: self.width / image_ratios['en_flag']
            on_press: app.language_utils.change_language('ru')
            background_normal: 'resources/images/ru_flag.png'

<GameScreen>:
    BoxLayout:
        orientation: 'vertical'
        size_hint_x: buttons_width_coef
        Button:
            text: 'restart'
            on_press: root.restart()
            size_hint: None, None
            size: self.parent.width, self.parent.width
            background_normal: app.language_utils.set_texture('button')
            background_down: app.language_utils.set_texture('button_red_pressed')
        Button:
            id: field_switch
            text: 'to target\nfield'
            halign: 'center'
            on_press: root.switch_field()
            size_hint: None, None
            size: self.parent.width, self.parent.width
            background_normal: app.language_utils.set_texture('button')
            background_down: app.language_utils.set_texture('button_red_pressed')
        Button:
            text: 'undo'
            on_press: root.undo()
            size_hint: None, None
            size: self.parent.width, self.parent.width
            background_normal: app.language_utils.set_texture('button')
            background_down: app.language_utils.set_texture('button_red_pressed')
        Widget:
        Button:
            text: 'back'
            on_press: root.manager.transition.direction = 'right';root.manager.current = 'levels';root.clean()
            size_hint: None, None
            size: self.parent.width, self.parent.width
            background_normal: app.language_utils.set_texture('button')
            background_down: app.language_utils.set_texture('button_red_pressed')

<LevelsScreen>:
    Button:
        text: 'back'
        on_press: root.manager.transition.direction = 'right';root.manager.current = 'menu'
        size_hint: (0.125, None)
        height: self.width * image_ratios['button']
        pos: (0, 0)
        background_normal: app.language_utils.set_texture('button')
        background_down: app.language_utils.set_texture('button_red_pressed')

    ScrollView:
        size_hint: 0.7, 0.7
        pos_hint: {'center_x': 0.5, 'center_y': 0.4}
        do_scroll_x: False
        do_scroll_y: True

        GridLayout:
            size_hint_y: None
            height: self.minimum_height
            cols: 4
            padding: '10dp'
            spacing: self.width / 50
            row_default_height: self.width / self.cols / image_ratios['button_red']
            row_force_default: False
            on_parent:
                for i in range(1, 100): self.add_widget(
                Button(
                text = "Level {0}".format(i),
                background_normal = root.get_button_image(i)[0],
                background_down = root.get_button_image(i)[1],
                on_press=lambda _, lvl=i:root.go_to_lvl(lvl)
                )
                )

<WinningWidget>:
    canvas.before:
        Color:
            rgba: 0, 0, 0, 0.4
        Rectangle:
            size: self.size
            pos: self.pos
    BoxLayout:
        orientation: 'vertical'
        size_hint: (0.5, 0.5)
        pos_hint: {"center_x": 0.5, "center_y": 0.5}
        canvas.before:
            Color:
                rgba: 0, 0, 1, 1
            Rectangle:
                size: self.size
                pos: self.pos
        Image:
            source: app.language_utils.set_texture('you_win')
            pos_hint: {"center_x": 0.5, "center_y": 0.5}
        BoxLayout:
            orientation: 'horizontal'
            Button:
                text: 'to lvls'
                on_press: root.parent.manager.transition.direction = 'right';root.parent.manager.current = 'levels';root.parent.clean()
                background_normal: app.language_utils.set_texture('button')
                background_down: app.language_utils.set_texture('button_red_pressed')
            Button:
                text: 'restart'
                on_press: root.parent.restart()
                background_normal: app.language_utils.set_texture('button')
                background_down: app.language_utils.set_texture('button_red_pressed')
            Button:
                id: next_lvl_button
                text: 'next lvl'
                on_press: root.parent.go_to_next_lvl()
                background_normal: app.language_utils.set_texture('button')
                background_down: app.language_utils.set_texture('button_red_pressed')


<RulesScrollViewWidget>:
    ScrollView:
        id: rule_scroll_view
        size_hint: None, None
        pos: screen_utils.get_scrollview_pos_n_size()[0]
        size: screen_utils.get_scrollview_pos_n_size()[1]
        canvas.before:
            Rectangle:
                pos: self.pos
                size: self.size
                source: app.language_utils.set_texture('notebook')
        GridLayout:
            id: grid
            cols: 1
            spacing: self.parent.height / 50
            padding: '10dp'
            size_hint_y: None
            height: self.minimum_height
    Button:
        size_hint: None, None
        height: root.ids.rule_scroll_view.height / 8
        width: self.height * image_ratios['button']
        pos_hint: None, None
        pos: root.ids.rule_scroll_view.pos
        text: 'All rules'
        on_press: root.parent.show_all_rules()
        background_normal: app.language_utils.set_texture('all_rules_btn')
        background_down: app.language_utils.set_texture('button_red_pressed')

<Task>:
    Label:
        id: title
        text: root.title_text
        text_size: self.size
        halign: 'center'
        valign: 'middle'
        color: 0, 0, 0, 1
        pos_hint: {'center_y': 0.8, 'center_x': root.screen_utils.get_field_middle_x_ratio()}
        size_hint: 0.3, 0.18
        canvas.before:
            Color:
                rgba: 1, 1, 1, 1
            Rectangle:
                size: self.size
                pos: self.pos
