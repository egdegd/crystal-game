#: import Button kivy.uix.button.Button
#: import Factory kivy.factory.Factory
#: import buttons_width_coef src.backend.constants.BUTTONS_WIDTH_COEF
#: import MyAdaptiveLabel src.backend.MyAdaptiveLabel.MyAdaptiveLabel
#: import image_ratios src.backend.constants.IMAGE_RATIOS
#: import screen_utils src.backend.ScreenUtils.ScreenUtils
#: import total_stars src.backend.ModuleUtils.total_stars
#: import star_statistic_or_q src.backend.ModuleUtils.star_statistic_or_q

<MenuScreen>:
    canvas.before:
        Rectangle:
            size: (self.width, self.width)
            source: app.language_utils.set_texture('background')

    RotatedImage:
        angle: -25
        size_hint_x: 1/9
        pos_hint: {'center_x': 0.4, 'center_y': 0.2}
        source: app.language_utils.set_texture('opened_envelope4')
    RotatedImage:
        angle: 5
        size_hint_x: 1/13
        pos_hint: {'center_x': 0.9, 'center_y': 0.55}
        source: app.language_utils.set_texture('opened_envelope')
    Button:
        id: play_btn
        size_hint_x: 1/4
        size_hint_y: None
        height: self.width
        pos_hint: {'center_x': 0.18}
        y: 0
        on_press: app.sound_handler.play_button_tap(); root.manager.transition.direction = 'left';root.manager.current = 'modules'
        background_normal: app.language_utils.set_texture('box_play')
        background_down: self.background_normal
        border: 0, 0, 0, 0
    Image:
        id: box_over
        source: app.language_utils.set_texture('box_over')
        size_hint_x: 1/5
        size_hint_y: None
        height: self.width
        y: play_btn.height
        pos_hint: {'center_x': 0.185}
    RotatedImage:
        angle: 30
        size_hint: 1/10, None
        pos_hint: {'center_x': 0.2}
        pos: self.x, play_btn.height + 0.6 * box_over.height
        source: app.language_utils.set_texture('closed_envelope')
    Button:
        id: quit
        size_hint_x: 10/75
        size_hint_y: None
        height: self.width
        y: 0
        pos_hint: {'center_x': 0.56}
        on_press: app.sound_handler.play_button_tap(); app.stop()
        background_normal: app.language_utils.set_texture('box_quit')
        background_down: self.background_normal
        border: 0, 0, 0, 0
    Button:
        id: tutorial
        size_hint_x: 10/45
        size_hint_y: None
        height: self.width
        pos: quit.x + quit.width, 0
        on_press: app.sound_handler.play_button_tap(); root.manager.transition.direction = 'left';root.manager.current = 'tutorial'
        background_normal: app.language_utils.set_texture('box_tutorial')
        background_down: self.background_normal
        border: 0, 0, 0, 0
    Image:
        source: app.language_utils.set_texture('box_next_to')
        size_hint_x: 1/7
        size_hint_y: None
        height: self.width
        pos: tutorial.x + tutorial.width, 0



    BoxLayout:
        size_hint: 0.15, 0.1
        pos_hint:  {'right': 1, 'top': 1}
        orientation: 'horizontal'
        padding: 0, 0, '7dp', '7dp'
        spacing: '10dp'
        Button:
            id: en_flag
            border: 0, 0, 0, 0
            size_hint_y: None
            height: self.width / image_ratios['en_flag']
            on_press: app.sound_handler.play_button_tap(); app.language_utils.change_language('en')
            background_normal: app.language_utils.set_texture('en_flag')
            background_down: self.background_normal
        Button:
            id: ru_flag
            border: 0, 0, 0, 0
            size_hint_y: None
            height: self.width / image_ratios['en_flag']
            on_press: app.sound_handler.play_button_tap(); app.language_utils.change_language('ru')
            background_normal: app.language_utils.set_texture('ru_flag')
            background_down: self.background_normal

<ModulesScreen>:
    canvas.before:
        Rectangle:
            size: (self.width, self.width)
            source: app.language_utils.set_texture('background')
    Button:
        on_press: app.sound_handler.play_button_tap(); root.manager.transition.direction = 'right';root.manager.current = 'menu'
        size_hint: (0.125, None)
        height: self.width / image_ratios['back']
        pos: (0, 0)
        background_normal: app.language_utils.set_texture('back_btn')
        background_down: self.background_normal

    BoxLayout:
        size_hint: 0.15, 0.1
        pos_hint: {'right': 1, 'top': 1}
        orientation: 'horizontal'
        Button:
            border: 0, 0, 0, 0
            on_press: root.show_star_popup()
            size_hint_x: None
            width: self.height * image_ratios['q_mark']
            background_normal: app.language_utils.set_texture('q_mark')
            background_down: self.background_normal
        Image:
            source: app.language_utils.set_texture('stamp')
        Label:
            id: stars_amount
            canvas.before:
                Color:
                    rgba: 0, 0, 0, 1
                Rectangle:
                    size: self.size
                    pos: self.pos
    FloatLayout:
        size_hint: 0.8, 0.7
        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
        canvas.before:
            Color:
                rgba: 0.992, 0.925, 0.863, 1
            Rectangle:
                pos: self.pos
                size: self.size
            Color:
                rgba: 0.29, 0, 0.153, 1
            Line:
                width: 4
                rectangle: self.x, self.y, self.width, self.height
                close: True
        Image:
            source: app.language_utils.set_texture('postbox_label')
            size_hint_y: 0.25
            pos_hint: {'center_y': 0.8, 'center_x': 0.5}
        RatioLayout:
            size_hint_y: 0.6
            pos_hint: {'center_y': 0.35, 'center_x': 0.5}
            spacing: self.width / 20
            Button:
                ratio: image_ratios['postbox']
                on_press: app.sound_handler.play_button_tap(); root.manager.transition.direction = 'left';root.manager.get_screen('levels').module = 1;root.manager.current = 'levels'
                background_normal: app.language_utils.set_texture('postbox_a')
                background_down: self.background_normal
                border: 0, 0, 0, 0
            Button:
                ratio: image_ratios['postbox']
                on_press: app.sound_handler.play_button_tap(); root.manager.transition.direction = 'left';root.manager.get_screen('levels').module = 2;root.manager.current = 'levels'
                background_normal: app.language_utils.set_texture('postbox_b')
                background_down: self.background_normal
                border: 0, 0, 0, 0
            Button:
                ratio: image_ratios['postbox']
                on_press: app.sound_handler.play_button_tap(); root.manager.transition.direction = 'left';root.manager.get_screen('levels').module = 3;root.manager.current = 'levels'
                background_normal: app.language_utils.set_texture('postbox_c')
                background_down: self.background_normal
                border: 0, 0, 0, 0

<GameScreen>:
    canvas.before:
        Rectangle:
            size: (self.width, self.width)
            source: app.language_utils.set_texture('background')
    BoxLayout:
        orientation: 'vertical'
        size_hint_x: buttons_width_coef
        padding: '10dp', '10dp', 0, '10dp'
        spacing: '20dp'
        Button:
            border: 0, 0, 0, 0
            on_press: app.sound_handler.play_button_tap(); root.restart()
            size_hint: None, None
            width: self.parent.width
            height: self.width / image_ratios['restart']
            background_normal: app.language_utils.set_texture('restart_btn')
            background_down: self.background_normal
        Button:
            id: field_switch
            border: 0, 0, 0, 0
            on_press: app.sound_handler.play_button_tap(); root.switch_field()
            size_hint: None, None
            size: self.parent.width, self.parent.width
            background_normal: app.language_utils.set_texture('target_field_btn')
            background_down: self.background_normal
        Button:
            border: 0, 0, 0, 0
            on_press: app.sound_handler.play_button_tap(); root.undo()
            size_hint: None, None
            width: self.parent.width
            height: self.width / image_ratios['undo']
            background_normal: app.language_utils.set_texture('undo_btn')
            background_down: self.background_normal
        Widget:
        Button:
            border: 0, 0, 0, 0
            on_press: app.sound_handler.play_button_tap(); root.manager.transition.direction = 'right';root.manager.current = 'levels';root.clean()
            size_hint: None, None
            width: self.parent.width
            height: self.width / image_ratios['back']
            background_normal: app.language_utils.set_texture('back_btn')
            background_down: self.background_normal

<LevelsScreen>:
    canvas.before:
        Rectangle:
            size: (self.width, self.width)
            source: app.language_utils.set_texture('background')
    Image:
        source: app.language_utils.set_texture('levels')
        size_hint_y: 0.25
        pos_hint: {'center_x': 0.5, 'center_y': 0.85}
    Button:
        on_press: app.sound_handler.play_button_tap(); root.manager.transition.direction = 'right';root.manager.current = 'modules'
        size_hint: (0.125, None)
        height: self.width / image_ratios['back']
        pos: (0, 0)
        background_normal: app.language_utils.set_texture('back_btn')
        background_down: self.background_normal

    ScrollView:
        size_hint: 0.7, 0.7
        pos_hint: {'center_x': 0.5, 'center_y': 0.35}
        do_scroll_x: False
        do_scroll_y: True

        GridLayout:
            size_hint_y: None
            height: self.minimum_height
            cols: 4
            padding: '10dp'
            spacing: self.width / 50
            row_default_height: self.width / self.cols / image_ratios['opened_envelope']
            row_force_default: False

<WinningWidget>:
    canvas.before:
        Rectangle:
            size: (self.width, self.width)
            source: app.language_utils.set_texture('background')
    Image:
        source: app.language_utils.set_texture('you_win')
        size_hint_x: 0.7
        pos_hint: {'center_x': 0.5, 'center_y': 0.6}
    RatioLayout:
        size_hint_y: 0.3
        id: buttons
        Button:
            id: levels_button
            ratio: image_ratios['levels_label_btn']
            on_press: app.sound_handler.play_button_tap(); root.parent.manager.transition.direction = 'right';root.parent.manager.current = 'levels';root.parent.clean()
            background_normal: app.language_utils.set_texture('levels_label_btn')
            background_down: self.background_normal
        Button:
            ratio: image_ratios['restart_label_btn']
            on_press: app.sound_handler.play_button_tap(); root.parent.restart()
            background_normal: app.language_utils.set_texture('restart_label_btn')
            background_down: self.background_normal
        Button:
            id: next_lvl_button
            ratio: image_ratios['next_lvl_label_btn']
            on_press: app.sound_handler.play_button_tap(); root.parent.go_to_next_lvl()
            background_normal: app.language_utils.set_texture('next_lvl_label_btn')
            background_down: self.background_normal


<RulesScrollViewWidget>:
    all_rules_btn: all_rules_btn
    ScrollView:
        id: rule_scroll_view
        size_hint: None, None
        pos: screen_utils.get_scrollview_pos_n_size()[0]
        size: screen_utils.get_scrollview_pos_n_size()[1]
        border_width: 10
        canvas.before:
            Color:
                rgba: 0.992, 0.925, 0.863, 1
            Rectangle:
                pos: self.pos
                size: self.size
            Color:
                rgba: 0.29, 0, 0.153, 1
            Line:
                width: self.border_width
                rectangle: self.x, self.y, self.width, self.height
                close: True

        GridLayout:
            id: grid
            cols: 1
            spacing: self.parent.height / 50
            padding: root.ids.rule_scroll_view.border_width * 1.5
            size_hint_y: None
            height: self.minimum_height
    Button:
        id: all_rules_btn
        border: 0, 0, 0, 0
        size_hint: None, None
        width: root.ids.rule_scroll_view.width - root.ids.rule_scroll_view.border_width * 3
        height: self.width / image_ratios['all_rules']
        pos_hint: None, None
        pos: (root.ids.rule_scroll_view.x + root.ids.rule_scroll_view.border_width * 1.5, root.ids.rule_scroll_view.y + root.ids.rule_scroll_view.border_width * 2)
        on_press: app.sound_handler.play_button_tap(); root.parent.show_all_rules()
        background_normal: app.language_utils.set_texture('all_rules_btn')
        background_down: self.background_normal

<Task>:
    MyAdaptiveLabel:
        id: title
        text: root.title_text
        size_hint: 0.3, 0.2
        halign: 'center'
        valign: 'middle'
        color: 0.29, 0, 0.153, 1
        pos_hint: {'center_y': 0.8, 'center_x': root.screen_utils.get_field_middle_x_ratio()}
        adapt_tasks: True
        border_width: 3
        canvas.before:
            Color:
                rgba: 0.992, 0.925, 0.863, 1
            Rectangle:
                pos: self.pos
                size: self.size
            Color:
                rgba: 232/256, 58/256, 88/256, 1
            Line:
                width: self.border_width
                rectangle: self.x - self.border_width, self.y - self.border_width, self.width + 2 * self.border_width, self.height + 2 * self.border_width
                close: True


<StarsPopup@Popup>:
    title: app.language_utils.set_string('stamps')
    size_hint: (0.7, 0.7)
    BoxLayout:
        orientation: 'vertical'
        MyAdaptiveLabel:
            adapt_height: True
            adapt_width: True
            valign: 'top'
            text: app.language_utils.set_string('stamps_text')
        BoxLayout:
            orientation: 'vertical'
            id: grid
            cols: 1
            spacing: '20dp'
            padding: '5dp'


<StarsPerModule@BoxLayout>:
    orientation: 'horizontal'
    spacing: '5dp'
    MyAdaptiveLabel:
        adapt_height: True
        valign: 'middle'
        text: app.language_utils.set_string('module') + ' ' + str(root.module) + ': ' + star_statistic_or_q(root.module)
    Image:
        size_hint_x: None
        width: self.height * image_ratios['stamp']
        source: app.language_utils.set_texture('stamp_' + chr(96 + root.module))


<RotatedImage@Image>:
    angle: 0
    canvas.before:
        PushMatrix
        Rotate:
            angle: root.angle
            axis: 0, 0, 1
            origin: root.center
    canvas.after:
        PopMatrix